version: '3.7'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    networks:
      - flink-net

  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_CREATE_TOPICS: "input-topic:1:1,template-topic:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - flink-net

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: "kafka-cluster"
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka:9092"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
    networks:
      - flink-net

  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    networks:
      - flink-net

  dynamodb-local:
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb"
    networks:
      - flink-net

  flask-app:
    build: .
    ports:
      - "5000:5000"
    environment:
      - REDIS_HOST=redis
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - FLASK_APP=app.py
      - FLASK_ENV=development
    depends_on:
      - redis
      - dynamodb-local
      - kafka
    networks:
      - flink-net

networks:
  flink-net:
    external: false
    name: flink-net
